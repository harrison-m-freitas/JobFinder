name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          # Se usar pyproject.toml:
          pip install -e ".[dev]"
          # fallback:
          # pip install -r requirements.txt
          pip install pre-commit

      - name: Pre-commit (lint/format/security)
        run: |
          pre-commit run --all-files

      - name: Run tests (pytest)
        env:
          # Defina variáveis “safe” para testes (sem segredos reais)
          DATABASE_URL: "postgresql+psycopg://postgres:postgres@localhost:5432/postgres"
        run: |
          pytest -q --maxfail=1

      - name: Start Postgres (service)
        uses: ankane/setup-postgres@v1
        with:
          postgres-version: 16

  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: jobhunter
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U app -d jobhunter"
          --health-interval=5s --health-timeout=3s --health-retries=10
    env:
      DATABASE_URL: postgresql+psycopg://app:app@localhost:5432/jobhunter
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - run: pip install -e .
      - run: pip install black ruff mypy pytest pytest-cov alembic
      - run: alembic -c alembic.ini upgrade head
      - run: black --check .
      - run: ruff .
      - run: mypy src
      - run: pytest
