name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: Lint / Format / Segurança (pre-commit)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12 (com cache pip)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements.txt

      - name: Instalar dependências de dev e pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,test]"
          pip install pre-commit
      - name: Rodar pre-commit (black, ruff, mypy, bandit, gitleaks)
        run: pre-commit run --all-files

  tests:
    name: Testes (pytest) • Python ${{ matrix.python }} • Postgres
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python: [ "3.12", "3.13" ]
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: jobhunter
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U app -d jobhunter"
          --health-interval=5s --health-timeout=3s --health-retries=20

    env:
      # Usar host "localhost" para acessar o service container
      DATABASE_URL: postgresql+psycopg://app:app@localhost:5432/jobhunter

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python }} (com cache pip)
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements.txt

      - name: Instalar projeto (dev+test)
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,test]"

      - name: Aguardar Postgres ficar saudável
        run: |
          for i in {1..60}; do
            pg_isready -h localhost -p 5432 -U app -d jobhunter && exit 0
            sleep 1
          done
          echo "Postgres não ficou pronto a tempo"; exit 1

      - name: Migrar banco (alembic upgrade head)
        run: alembic -c alembic.ini upgrade head

      - name: Rodar testes (pytest)
        run: pytest

      - name: Artefato de cobertura (opcional)
        if: always()
        run: |
          coverage xml -o coverage.xml || true
        continue-on-error: true
      - name: Upload cobertura (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python }}
          path: coverage.xml
          if-no-files-found: ignore
